{
    "name": "facilityReferralIndicatorDataSetBase",
    "version": "1.0",
    "tag": "facility_referral_indicator_dataset_base",
    "description": "",
    "uses": [],
    "sources": [
      {
          "table": "amrs.patient_program",
          "alias": "t3"
      },
      {
          "table": "etl.patient_referral",
          "alias": "t4",
          "join": {
              "type": "LEFT",
              "joinCondition": "t4.patient_program_id = t3.patient_program_id"
          }
      },
      {
          "table": "amrs.program",
          "alias": "t5",
          "join": {
              "type": "LEFT",
              "joinCondition": "t3.program_id = t5.program_id"
          }
      },
      {
          "table": "amrs.location",
          "alias": "t9",
          "join": {
              "type": "LEFT",
              "joinCondition": "t3.location_id = t9.location_id"
          }
      },
      {
          "table": "amrs.location",
          "alias": "location",
          "join": {
              "type": "LEFT",
              "joinCondition": "t4.referred_from_location_id = location.location_id"
          }
      },
      {
          "table": "etl.flat_cdm_peer_navigation",
          "alias": "peer_navigation",
          "join": {
              "type": "LEFT",
              "joinCondition": "peer_navigation.person_id = t3.patient_id"
          }
      },
      {
          "table": "etl.flat_cdm_peer_navigation",
          "alias": "initial_encounter",
          "join": {
              "type": "LEFT",
              "joinCondition": "initial_encounter.person_id = t3.patient_id AND initial_encounter.encounter_type = 192"
          }
      },
      {
          "table": "etl.flat_cdm_peer_navigation",
          "alias": "follow_up_encounter",
          "join": {
              "type": "LEFT",
              "joinCondition": "follow_up_encounter.person_id = t3.patient_id AND follow_up_encounter.encounter_type = 193"
          }
      },
        {
            "table": "amrs.person",
            "alias": "t1",
            "join": {
                "type": "LEFT",
                "joinCondition": "t3.patient_id = t1.person_id"
            }

        },
        {
            "table": "amrs.person_name",
            "alias": "person_name",
            "join": {
                "type": "LEFT",
                "joinCondition": "t1.person_id = person_name.person_id AND (person_name.voided IS NULL || person_name.voided = 0)"
            }
        },
        {
            "table": "amrs.patient_identifier",
            "alias": "id",
            "join": {
                "type": "LEFT",
                "joinCondition": "t1.person_id = id.patient_id AND (id.voided IS NULL || id.voided = 0)"
            }
        },
        {
            "table": "amrs.person_attribute",
            "alias": "contacts",
            "join": {
                "type": "LEFT",
                "joinCondition": "t1.person_id = contacts.person_id AND (contacts.voided IS NULL || contacts.voided = 0) AND contacts.person_attribute_type_id = 10"
            }
        },
        {
            "table": "amrs.encounter",
            "alias": "encounters",
            "join": {
                "type": "LEFT",
                "joinCondition": "encounters.patient_id = t1.person_id"
            }
        }
     ],
    "columns": [
        {
            "type": "simple_column",
            "alias": "patient_uuid",
            "column": "t1.uuid"
        },
        {
            "type": "simple_column",
            "alias": "location",
            "column": "t9.name"
        },
        {
            "type": "simple_column",
            "alias": "location_uuid",
            "column": "t9.uuid"
        },
        {
            "type": "simple_column",
            "alias": "location_id",
            "column": "t9.location_id"
        },
        {
            "type": "simple_column",
            "alias": "patients",
            "column": "t1.person_id"
        },
        {
            "type": "simple_column",
            "alias": "gender",
            "column": "t1.gender"
        },
        {
            "type": "simple_column",
            "alias": "birthdate",
            "column": "t1.birthdate"
        },
        {
            "type": "simple_column",
            "alias": "is_referal_complete",
            "column": "peer_navigation.is_referal_completed "
        },
        {
            "type": "derived_column",
            "alias": "phone_number",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (contacts.value IS NULL, '', contacts.value)"
            }
        },
        {
            "type": "derived_column",
            "alias": "age",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "extract(year from (from_days(datediff(now(),t1.birthdate))))"
            }
        },
        {
            "type": "derived_column",
            "alias": "person_name",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "CONCAT(COALESCE(person_name.given_name, ''), ' ', COALESCE(person_name.middle_name, ''), ' ', COALESCE(person_name.family_name, ''))"
            }
        },
        {
            "type": "derived_column",
            "alias": "identifiers",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": " GROUP_CONCAT(DISTINCT id.identifier SEPARATOR ', ')"
            }
        },
        {
            "type": "simple_column",
            "alias": "patient_referal_status",
            "column": "peer_navigation.patient_referal_status"
        },
        {
            "type": "simple_column",
            "alias": "encounter_type",
            "column": "peer_navigation.encounter_type"
        },
        {
            "type": "derived_column",
            "alias": "initial_encounter",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (initial_encounter.encounter_type =192, 1, 0)"
            }
        },
        {
            "type": "derived_column",
            "alias": "follow_up_encounter",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (follow_up_encounter.encounter_type =193, 1, 0)"
            }
        },
        {
            "type": "derived_column",
            "alias": "number_of_up_referrals",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (t4.previous_program =33 and t4.current_program = 24  or t4.previous_program = 24 and t4.current_program= 23 or t4.previous_program = 33 and t4.current_program = 23,1,null)"
            }
        },
        {
            "type": "derived_column",
            "alias": "number_of_down_referrals",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (t4.current_program =33 and t4.previous_program = 24  or t4.current_program = 24 and t4.previous_program= 23 or t4.current_program = 33 and t4.previous_program = 23,1,null)"
            }
        },
        {
            "type": "derived_column",
            "alias": "Number_of_referrals_completed_by_rtc",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (t4.current_program =33 and t4.previous_program = 24  or t4.current_program = 24 and t4.previous_program= 23 or t4.current_program = 33 and t4.previous_program = 23,1,null)"
            }
        },
        {
            "type": "derived_column",
            "alias": "Number_of_outstanding_down_referral",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (t4.current_program =33 and t4.previous_program = 24  or t4.current_program = 24 and t4.previous_program= 23 or t4.current_program = 33 and t4.previous_program = 23,1,null)"
            }
        },
        {
            "type": "derived_column",
            "alias": "Number_of_outstanding_up_referral",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "if (t4.current_program =33 and t4.previous_program = 24  or t4.current_program = 24 and t4.previous_program= 23 or t4.current_program = 33 and t4.previous_program = 23,1,null)"
            }
        }
     ],

     "filters": {
         "conditionJoinOperator": "and",
         "conditions": [
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "encounters.encounter_datetime >= ?",
                 "parameterName": "startDate"
             },
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "encounters.encounter_datetime <= ?",
                 "parameterName": "endDate"
             },
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "t9.uuid in ?",
                 "parameterName": "locationUuids"
             },
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "round(datediff(encounters.encounter_datetime,t1.birthdate)/365) >= ?",
                 "parameterName": "startAge"
             },
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "round(datediff(encounters.encounter_datetime,t1.birthdate)/365) <= ?",
                 "parameterName": "endAge"
             },
             {
                 "filterType": "tableColumns",
                 "conditionExpression": "t1.gender in ?",
                 "parameterName": "gender"
             }
         ]
     }
}
