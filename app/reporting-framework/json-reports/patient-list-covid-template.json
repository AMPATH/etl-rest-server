{
  "name": "patient_list_covid_template",
  "version": "1.0",
  "tag": "patient_list_covid_template",
  "description": "Patient list covid template",
  "sources": [
    {
      "table": "amrs_migration.person",
      "alias": "t1"
    },
    {
      "table": "amrs_migration.person_name",
      "alias": "person_name",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = person_name.person_id AND (person_name.voided IS NULL || person_name.voided = 0) AND person_name.preferred = 1"
      }
    },
    {
      "table": "amrs_migration.patient_identifier",
      "alias": "id",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = id.patient_id AND (id.voided IS NULL || id.voided = 0)"
      }
    },
    {
      "table": "amrs_migration.person_attribute",
      "alias": "contacts",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = contacts.person_id AND (contacts.voided IS NULL || contacts.voided = 0) AND contacts.person_attribute_type_id in (10, 48)"
      }
    },
    {
      "table": "etl.flat_hiv_summary_v15b",
      "alias": "fh",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = fh.person_id AND fh.next_clinical_location_id IS NULL AND fh.encounter_type NOT IN (99999) "
      }
    },
    {
      "table": "amrs_migration.encounter_type",
      "alias": "et",
      "join": {
        "type": "LEFT",
        "joinCondition": "fh.encounter_type = et.encounter_type_id"
      }
    },
    {
      "table": "amrs_migration.person_address",
      "alias": "pa",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = pa.person_id"
      }
    },
    {
      "table": "etl.flat_covid_extract",
      "alias": "c",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = c.person_id AND c.next_encounter_datetime IS NULL"
      }
    },
    {
      "table": "etl.flat_consent",
      "alias": "consent",
      "join": {
        "type": "LEFT",
        "joinCondition": "consent.person_id = t1.person_id"
      }
    }
  ],
  "columns": [
    {
      "type": "simple_column",
      "alias": "patient_uuid",
      "column": "t1.uuid"
    },
    {
      "type": "derived_column",
      "alias": "uuid",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "t1.uuid"
      }
    },
    {
      "type": "simple_column",
      "alias": "person_id",
      "column": "t1.person_id"
    },
    {
      "type": "simple_column",
      "alias": "gender",
      "column": "t1.gender"
    },
    {
      "type": "simple_column",
      "alias": "birthdate",
      "column": "t1.birthdate"
    },
    {
      "type": "derived_column",
      "alias": "age",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "extract(year from (from_days(datediff(now(),t1.birthdate))))"
      }
    },
    {
      "type": "derived_column",
      "alias": "person_name",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CONCAT(COALESCE(person_name.given_name, ''), ' ', COALESCE(person_name.middle_name, ''), ' ', COALESCE(person_name.family_name, ''))"
      }
    },
    {
      "type": "derived_column",
      "alias": "identifiers",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " GROUP_CONCAT(DISTINCT id.identifier SEPARATOR ', ')"
      }
    },
    {
      "type": "derived_column",
      "alias": "phone_number",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " GROUP_CONCAT(DISTINCT contacts.value SEPARATOR ', ')"
      }
    },
    {
      "type": "simple_column",
      "alias": "latest_rtc_date",
      "column": "date_format(fh.rtc_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "latest_vl",
      "column": "fh.vl_1"
    },
    {
      "type": "derived_column",
      "alias": "vl_category",
      "expressionType": "case_statement",
      "expressionOptions": {
        "caseOptions": [
          {
            "condition": "fh.vl_1 < 50",
            "value": "LDL"
          },
          {
            "condition": "(fh.vl_1 >= 50 and fh.vl_1 < 200)",
            "value": "Low Risk Low Level Viremia"
          },
          {
            "condition": "(fh.vl_1 >= 200 and fh.vl_1 < 1000)",
            "value": "High Risk Low Level Viremia"
          },
          {
            "condition": "(fh.vl_1 > 1000)",
            "value": "Suspected Treatment Failure"
          }
        ]
      }
    },
    {
      "type": "simple_column",
      "alias": "latest_vl_date",
      "column": "date_format(fh.vl_1_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "last_appointment",
      "column": "CONCAT(COALESCE(DATE_FORMAT(fh.encounter_datetime, '%Y-%m-%d'),''),' ',COALESCE(et.name, ''))"
    },
    {
      "type": "simple_column",
      "alias": "cur_meds",
      "column": "fh.cur_arv_meds"
    },
    {
      "type": "simple_column",
      "alias": "previous_vl",
      "column": "fh.vl_2"
    },
    {
      "type": "simple_column",
      "alias": "previous_vl_date",
      "column": "date_format(fh.vl_2_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "nearest_center",
      "column": "pa.address3"
    },
    {
      "type": "derived_column",
      "alias": "covid_19_vaccination_status",
      "expressionType": "case_statement",
      "expressionOptions": {
        "caseOptions": [
          {
            "condition": "c.vaccination_status = 2208",
            "value": "Fully Vaccinated"
          },
          {
            "condition": "c.vaccination_status = 11907",
            "value": "Partially Vaccinated"
          },
          {
            "condition": "c.person_id IS NULL AND c.second_dose_vaccine_administered IS NULL AND c.vaccination_status is null AND EXTRACT(YEAR FROM (FROM_DAYS(DATEDIFF(NOW(), t1.birthdate)))) >= 15",
            "value": "Unknown Covid 19 Vaccination"
          },
          {
            "condition": "c.received_covid_19_vaccine = 1066 AND c.vaccination_status is null AND EXTRACT(YEAR FROM (FROM_DAYS(DATEDIFF(NOW(), t1.birthdate)))) >= 15",
            "value": "Not vaccinated"
          }
        ]
      }
    },
    {
      "type": "derived_column",
      "alias": "sms_consent_provided",
      "expressionType": "case_statement",
      "expressionOptions": {
        "caseOptions": [
          {
            "condition": "consent.patient_sms_consent_provided = 1065",
            "value": "YES"
          },
          {
            "condition": "consent.patient_sms_consent_provided = 1066",
            "value": "NO"
          }
        ]
      }
    },
    {
      "type": "simple_column",
      "alias": "sms_receive_time",
      "column": "consent.sms_receive_time"
    }
  ],
  "groupBy": {
    "columns": ["t1.person_id"]
  }
}
