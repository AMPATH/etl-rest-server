{
    "name": "combinedBreastCervicalCancerMonthlySummaryBase",
    "version": "1.0",
    "tag": "combined_breast_cervical_cancer_monthly_summary_base",
    "uses": [],
    "sources": [
        {
            "table": "etl.flat_obs",
            "alias": "obs"
        },
        {
            "table": "etl.flat_breast_cancer_screening",
            "alias": "fbcs",
            "join":{
                "type":"left",
                "joinCondition": "obs.person_id = fbcs.person_id "
            }
        },
        {
            "table": "etl.flat_cervical_cancer_screening",
            "alias": "fccs",
            "join":{
                "type":"left",
                "joinCondition": "obs.person_id = fccs.person_id "
            }
        },
        {
            "table": "amrs.person_name",
            "alias": "patient_name",
            "join": {
                "type": "inner",
                "joinCondition": "obs.person_id = patient_name.person_id and (patient_name.voided is null || patient_name.voided = 0)"
                
            }
        },
        {
            "table": "amrs.patient_identifier",
            "alias": "patient_id",
            "join": {
                "type": "inner",
                "joinCondition": "obs.person_id = patient_id.patient_id and (patient_id.voided is null || patient_id.voided = 0)"
                
            }

        },
        {
            "table": "amrs.location",
            "alias": "l",
            "join": {
                "type": "inner",
                "joinCondition": "obs.location_id = l.location_id"
                
            }
        },
        {
            "table": "amrs.person_attribute",
            "alias": "p",
            "join": {
                "type": "left",
                "joinCondition": "obs.person_id = p.person_id and (p.voided is null || p.voided = 0 and (p.person_attribute_type_id = 10))"

            }
        },
        {
            "table": "amrs.person",
            "alias": "person",
            "join": {
                "type": "left",
                "joinCondition": "obs.person_id = person.person_id and (person.voided is null || person.voided = 0 )"

            }
        }
    ],
    "columns": [
        {
            "type": "simple_column",
            "alias": "obs_encounter_id",
            "column": "obs.encounter_id"
        },
        {
            "type": "simple_column",
            "alias": "fbcs_person_id",
            "column": "fbcs.person_id"
        },
        {
            "type": "simple_column",
            "alias": "fccs_person_id",
            "column": "fccs.person_id"
        },
        {
            "type": "derived_column",
            "alias": "person_name",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "concat(coalesce(patient_name.given_name, ''), ' ', coalesce(patient_name.middle_name, ''), ' ', coalesce(patient_name.family_name, ''))"
            }
        },
        {
            "type": "simple_column",
            "alias": "phone_number",
            "column": "p.value"
        },
        {
            "type": "derived_column",
            "alias": "identifiers",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "group_concat(distinct patient_id.identifier separator ', ')"
            }
        },
        {
            "type": "simple_column",
            "alias": "gender",
            "column": "person.gender"
        },
        {
            "type": "simple_column",
            "alias": "location_id",
            "column": "obs.location_id"
        },
        {
            "type": "derived_column",
            "alias": "type_of_abnormality",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "case when cur_physical_findings=0 then 'Normal' when cur_physical_findings=1 then 'Mastitis' when cur_physical_findings=2 then 'Breast lumps' when cur_physical_findings=3 then 'Cracked nipple' when cur_physical_findings=4 then 'Others' when cur_physical_findings=5 then 'Mass' when cur_physical_findings=6 then 'Nipple discharge' when cur_physical_findings=7 then 'Breast skin changes' when cur_physical_findings=8 then 'Not done' when cur_physical_findings=9 then 'Abscess breast' when cur_physical_findings=10 then 'Breast engorgement' when cur_physical_findings=11 then 'Abnormal' when cur_physical_findings=12 then 'Calor' when cur_physical_findings=13 then 'Peau Dorange' when cur_physical_findings=14 then 'Unknown' when cur_physical_findings=15 then 'Fine nodularity' when cur_physical_findings=16 then 'Dense nodularity' when cur_physical_findings=17 then 'Skin edema' when cur_physical_findings=18 then 'Nipple areolar change' when cur_physical_findings=19 then 'Muscle tenderness' when cur_physical_findings=20 then 'Benign' else null end"
            }
        },
        {
            "type": "simple_column",
            "alias": "location_uuid",
            "column": "l.uuid"
        },
        {
            "type": "simple_column",
            "alias": "location_name",
            "column": "l.name"
        },
        {
            "type": "simple_column",
            "alias": "encounter_datetime",
            "column": "obs.encounter_datetime"
        },
        {
            "type": "derived_column",
            "alias": "total_breast_screened",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "IF(fbcs.person_id IS NOT NULL, 1, 0)"
            }
        },
        {
            "type": "derived_column",
            "alias": "total_cervical_screened",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "IF(fccs.person_id IS NOT NULL, 1, 0)"
            }
        },
        {
            "type": "derived_column",
            "alias": "both_cervical_and_breast",
            "expressionType": "simple_expression",
            "expressionOptions": {
                "expression": "IF (fccs.person_id = fbcs.person_id,1,0)"
            }
        }


    ],
    "filters": {
        "conditionJoinOperator": "and",
        "conditions": [
            {
                "filterType": "tableColumns",
                "conditionExpression": "(fbcs.age OR fccs.age >= ?)",
                "parameterName": "startAge"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "(fbcs.age OR fccs.age <= ?)",
                "parameterName": "endAge"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "DATE(obs.encounter_datetime) >= ?    ",
                "parameterName": "startDate"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "DATE(obs.encounter_datetime) <= ? ",
                "parameterName": "endDate"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "obs.encounter_type in (86,69)"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "l.uuid in ?",
                "parameterName": "locationUuids"
            },
            {
                "filterType": "tableColumns",
                "conditionExpression": "person.gender in ?",
                "parameterName": "genders"
            }
        ]
    },
    "groupBy": {
        "groupParam": "groupByParam",
        "columns": [
            "obs.encounter_id"
        ]
    }
}