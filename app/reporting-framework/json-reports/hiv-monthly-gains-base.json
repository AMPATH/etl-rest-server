{
  "name": "hivMonthlyGainsBase",
  "version": "1.0",
  "tag": "hiv_monthly_gains_base",
  "description": "",
  "uses": [],
  "sources": [
    {
      "table": "<<hivMonthlyGainsEndingDatasetSource>>",
      "alias": "c"
    },
    {
      "table": "<<hivMonthlyGainsStartingDatasetSource>>",
      "alias": "p",
      "join": {
        "type": "LEFT",
        "joinCondition": "c.person_id = p.person_id AND p.endDate = '{startingMonth}'"
      }
    },
    {
      "table": "etl.flat_patient_identifiers_v1",
      "alias": "flat_identifiers",
      "join": {
        "type": "LEFT",
        "joinCondition": "c.person_id = flat_identifiers.patient_id"
      }
    },
    {
      "table": "amrs_migration.location",
      "alias": "cl",
      "join": {
        "type": "LEFT",
        "joinCondition": "c.location_id = cl.location_id"
      }
    },
    {
      "table": "amrs_migration.location",
      "alias": "pl",
      "join": {
        "type": "LEFT",
        "joinCondition": "p.location_id = pl.location_id"
      }
    },
    {
      "table": "etl.flat_hiv_transfer_in",
      "alias": "ft",
      "join": {
        "type": "LEFT",
        "joinCondition": "ft.person_id = c.person_id"
      }
    }
  ],
  "columns": [
    {
      "type": "simple_column",
      "alias": "person_id",
      "column": "c.person_id"
    },
    {
      "type": "simple_column",
      "alias": "end_date",
      "column": "DATE_FORMAT(c.endDate,'%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "start_month",
      "column": "DATE_FORMAT(p.endDate,'%Y-%m')"
    },
    {
      "type": "simple_column",
      "alias": "ccc_number",
      "column": "flat_identifiers.ccc"
    },
    {
      "type": "simple_column",
      "alias": "ovcid_id",
      "column": "flat_identifiers.ovcid"
    },
    {
      "type": "simple_column",
      "alias": "upi_number",
      "column": "flat_identifiers.nupi"
    },
    {
      "type": "simple_column",
      "alias": "end_month",
      "column": "DATE_FORMAT(c.endDate,'%Y-%m')"
    },
    {
      "type": "simple_column",
      "alias": "location",
      "column": "cl.name"
    },
    {
      "type": "simple_column",
      "alias": "location_uuid",
      "column": "cl.uuid"
    },
    {
      "type": "simple_column",
      "alias": "location_id",
      "column": "c.location_id"
    },
    {
      "type": "simple_column",
      "alias": "prev_location_id",
      "column": "c.prev_location_id"
    },
    {
      "type": "derived_column",
      "alias": "on_art_ending",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.on_art_this_month = 1, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "not_on_art_ending",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.on_art_this_month = 0 and c.status = 'active', 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "starting_not_active",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.status = 'active' and p.status != 'active'  and c.location_id = p.location_id then 1 WHEN c.status = 'active' and p.status is null then 1 WHEN c.status = 'active' and p.status != 'active'  and c.location_id != p.location_id then 1  WHEN c.status = 'active' and p.status = 'active'  and c.location_id != p.location_id then 1 else null end"
      }
    },
    {
      "type": "derived_column",
      "alias": "ending_active",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active', 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "ending_not_active",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status != 'active' AND (p.status = 'active' OR p.status IS NULL), 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "still_active",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND p.status = 'active' AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "still_active_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND p.status = 'active' AND c.on_art_this_month = 1 AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "still_active_not_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND p.status = 'active' AND c.on_art_this_month = 0 AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "ending_new_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.started_art_this_month = 1 = 1, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "newly_enrolled",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.enrolled_this_month = 1 AND c.transfer_in_this_month = 0,1,NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "newly_enrolled_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.enrolled_this_month = 1 AND c.transfer_in_this_month = 0 AND c.started_art_this_month = 1, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "newly_enrolled_pre_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.enrolled_this_month = 1 AND c.transfer_in_this_month = 0 AND c.started_art_this_month = 0, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "transferred_in",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CASE WHEN c.transfer_in_this_month = 1 AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.location_id != p.location_id THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "transferred_in_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CASE WHEN c.transfer_in_this_month = 1 AND c.cur_arv_meds IS NOT NULL AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.cur_arv_meds IS NOT NULL AND c.location_id != p.location_id THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "transferred_in_not_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CASE WHEN c.transfer_in_this_month = 1 AND c.cur_arv_meds IS NULL AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.cur_arv_meds IS NULL AND c.location_id != p.location_id THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "transferred_in_location",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CASE WHEN c.transfer_in_this_month = 1 AND c.location_id != p.location_id AND p.location_id IS not NULL THEN pl.name WHEN c.transfer_in_this_month = 1 AND p.location_id IS NULL and ft.transfer_from_location IS NOT NULL THEN ft.transfer_from_location WHEN c.transfer_in_this_month = 0 AND c.location_id != p.location_id THEN pl.name ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "return_to_care",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "return_to_care_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND c.on_art_this_month = 1 AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "return_to_care_not_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'active' AND c.on_art_this_month = 0 AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "dead",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(c.status = 'dead' AND c.location_id = p.location_id, 1, NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "gained_other",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.status = 'active' AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gained_other_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.status = 'active' AND c.on_art_this_month = 1 AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gained_other_not_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.status = 'active' AND c.on_art_this_month = 0 AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gain",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.enrolled_this_month = 1 AND c.transfer_in_this_month = 0 then 1 WHEN c.transfer_in_this_month = 1 AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.location_id != p.location_id THEN 1 WHEN c.status = 'active' AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id THEN 1 WHEN c.status = 'active' AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gain_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.enrolled_this_month = 1 AND c.on_art_this_month = 1 AND c.transfer_in_this_month = 0 then 1 WHEN c.transfer_in_this_month = 1 AND c.cur_arv_meds IS NOT NULL AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.on_art_this_month = 1 AND c.location_id != p.location_id THEN 1 WHEN c.status = 'active' AND c.on_art_this_month = 1 AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id THEN 1 WHEN c.status = 'active' AND c.on_art_this_month = 1 AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gain_not_on_art",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.enrolled_this_month = 1 AND c.on_art_this_month = 0 AND c.transfer_in_this_month = 0 then 1 WHEN c.transfer_in_this_month = 1 AND c.cur_arv_meds IS NULL AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 1 WHEN c.transfer_in_this_month = 0 AND c.on_art_this_month = 0 AND c.location_id != p.location_id THEN 1 WHEN c.status = 'active' AND c.on_art_this_month = 0 AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id THEN 1 WHEN c.status = 'active' AND c.on_art_this_month = 0 AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 1 ELSE NULL END"
      }
    },
    {
      "type": "derived_column",
      "alias": "gain_status",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "CASE WHEN c.enrolled_this_month = 1 AND c.transfer_in_this_month = 0 THEN 'Newly Enrolled' WHEN c.transfer_in_this_month = 1 AND (c.location_id != p.location_id OR p.location_id IS NULL) THEN 'Transferred in' WHEN c.transfer_in_this_month = 0 AND c.location_id != p.location_id THEN 'Transferred in' WHEN c.status = 'active' AND p.status != 'active' AND p.person_id IS NOT NULL AND c.location_id = p.location_id THEN 'Returned to Care' WHEN c.status = 'active' AND p.status IS NULL AND c.transfer_in_this_month = 0 AND c.enrolled_this_month = 0 THEN 'Other' ELSE NULL END"
      }
    }
  ],
  "filters": {
    "conditionJoinOperator": "and",
    "conditions": [
      {
        "filterType": "tableColumns",
        "conditionExpression": "c.endDate = ?",
        "parameterName": "endingMonth"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "c.location_id in ?",
        "parameterName": "locations"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "c.status = 'active'"
      }
    ]
  },
  "groupBy": {
    "groupParam": "groupByParam",
    "columns": ["person_id"]
  }
}
