{
  "name": "patient_requiring_viral_load_template",
  "version": "1.0",
  "tag": "patient_requiring_viral_load_template",
  "description": "Patient list template",
  "sources": [
    {
      "table": "amrs_migration.person",
      "alias": "t1"
    },
    {
      "table": "amrs_migration.person_name",
      "alias": "person_name",
      "join": {
        "type": "INNER",
        "joinCondition": "t1.person_id = person_name.person_id AND (person_name.voided IS NULL || person_name.voided = 0) AND person_name.preferred = 1"
      }
    },
    {
      "table": "amrs_migration.patient_identifier",
      "alias": "id",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = id.patient_id AND (id.voided IS NULL || id.voided = 0)"
      }
    },
    {
      "table": "amrs_migration.person_attribute",
      "alias": "contact",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = contact.person_id AND (contact.voided IS NULL || contact.voided = 0) AND contact.person_attribute_type_id in (10, 48)"
      }
    },
    {
      "table": "etl.flat_hiv_summary_v15b",
      "alias": "fhsh",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = fhsh.person_id AND fhsh.next_clinical_location_id IS NULL AND fhsh.encounter_type NOT IN (99999) "
      }
    },
    {
      "table": "amrs_migration.encounter_type",
      "alias": "ety",
      "join": {
        "type": "LEFT",
        "joinCondition": "fhsh.encounter_type = ety.encounter_type_id"
      }
    },
    {
      "table": "amrs_migration.person_address",
      "alias": "pad",
      "join": {
        "type": "LEFT",
        "joinCondition": "t1.person_id = pad.person_id"
      }
    }
  ],
  "columns": [
    {
      "type": "simple_column",
      "alias": "patient_uuid",
      "column": "t1.uuid"
    },
    {
      "type": "simple_column",
      "alias": "person_id",
      "column": "t1.person_id"
    },
    {
      "type": "simple_column",
      "alias": "gender",
      "column": "t1.gender"
    },
    {
      "type": "simple_column",
      "alias": "birthdate",
      "column": "t1.birthdate"
    },
    {
      "type": "derived_column",
      "alias": "age",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "extract(year from (from_days(datediff(now(),t1.birthdate))))"
      }
    },
    {
      "type": "derived_column",
      "alias": "person_name",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " CONCAT(COALESCE(person_name.given_name, ''), ' ', COALESCE(person_name.middle_name, ''), ' ', COALESCE(person_name.family_name, ''))"
      }
    },
    {
      "type": "derived_column",
      "alias": "identifiers",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " GROUP_CONCAT(DISTINCT id.identifier SEPARATOR ', ')"
      }
    },
    {
      "type": "derived_column",
      "alias": "has_pending_vl_test",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "case when (timestampdiff(day,t2.vl_order_date,now()) between 0 and 14) and (t2.vl_1_date is null or t2.vl_order_date > t2.vl_1_date) then true else false end"
      }
    },
    {
      "type": "derived_column",
      "alias": "current_vl",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "t2.vl_1 "
      }
    },
    {
      "type": "derived_column",
      "alias": "current_vl_date",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "date_format(t2.vl_1_date,'%d-%m-%Y')"
      }
    },
    {
      "type": "derived_column",
      "alias": "last_vl_order_date",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "date_format(t2.vl_order_date,'%d-%m-%Y')"
      }
    },
    {
      "type": "derived_column",
      "alias": "days_since_last_order",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "timestampdiff(day, t2.vl_order_date, now())"
      }
    },
    {
      "type": "derived_column",
      "alias": "phone_number",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": " GROUP_CONCAT(DISTINCT contact.value SEPARATOR ', ')"
      }
    },
    {
      "type": "simple_column",
      "alias": "latest_rtc_date",
      "column": "date_format(fhsh.rtc_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "latest_vl",
      "column": "fhsh.vl_1"
    },
    {
      "type": "derived_column",
      "alias": "vl_category",
      "expressionType": "case_statement",
      "expressionOptions": {
        "caseOptions": [
          {
            "condition": "fhsh.vl_1 < 50",
            "value": "LDL"
          },
          {
            "condition": "(fhsh.vl_1 >= 50 and fhsh.vl_1 < 200)",
            "value": "Low Risk Low Level Viremia"
          },
          {
            "condition": "(fhsh.vl_1 >= 200 and fhsh.vl_1 < 1000)",
            "value": "High Risk Low Level Viremia"
          },
          {
            "condition": "(fhsh.vl_1 > 1000)",
            "value": "Suspected Treatment Failure"
          }
        ]
      }
    },
    {
      "type": "simple_column",
      "alias": "latest_vl_date",
      "column": "date_format(fhsh.vl_1_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "last_appointment",
      "column": "CONCAT(COALESCE(DATE_FORMAT(fhsh.encounter_datetime, '%Y-%m-%d'),''),' ',COALESCE(ety.name, ''))"
    },
    {
      "type": "simple_column",
      "alias": "cur_meds",
      "column": "fhsh.cur_arv_meds"
    },
    {
      "type": "simple_column",
      "alias": "previous_vl",
      "column": "fhsh.vl_2"
    },
    {
      "type": "simple_column",
      "alias": "previous_vl_date",
      "column": "date_format(fhsh.vl_2_date, '%Y-%m-%d')"
    },
    {
      "type": "simple_column",
      "alias": "nearest_center",
      "column": "pad.address3"
    }
  ],
  "groupBy": {
    "columns": ["t1.person_id"]
  }
}
