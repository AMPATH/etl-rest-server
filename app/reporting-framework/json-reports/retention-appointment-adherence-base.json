{
  "name": "retentionAppointmentAdherenceBase",
  "version": "1.0",
  "tag": "retention_appointment_adherence_base",
  "uses": [
    {
      "name": "retentionReportCohortBase",
      "version": "1.0",
      "type": "dataset_def"
    }
  ],
  "sources": [
    {
      "table": "etl.flat_appointment",
      "alias": "fa"
    },
    {
      "table": "amrs.location",
      "alias": "l",
      "join": {
        "type": "inner",
        "joinCondition": "l.location_id = fa.location_id"
      }
    },
    {
      "table": "amrs.program",
      "alias": "pr",
      "join": {
        "type": "inner",
        "joinCondition": "pr.program_id = fa.program_id"
      }
    },
    {
      "table": "amrs.visit_type",
      "alias": "vt",
      "join": {
        "type": "left",
        "joinCondition": "vt.visit_type_id = fa.visit_type_id"
      }
    },
    {
      "table": "amrs.person",
      "alias": "p",
      "join": {
        "type": "inner",
        "joinCondition": "p.person_id = fa.person_id"
      }
    },
    {
      "table": "etl.flat_appointment",
      "alias": "attended_day",
      "join": {
        "type": "left",
        "joinCondition": "attended_day.person_id = fa.person_id AND DATE(attended_day.encounter_datetime) > DATE(fa.encounter_datetime) AND DATE(attended_day.encounter_datetime) <= DATE(fa.rtc_date) AND attended_day.is_clinical = 1"
      }
    },
    {
      "table": "etl.flat_appointment",
      "alias": "next_outreach",
      "join": {
        "type": "left",
        "joinCondition": "next_outreach.person_id = fa.person_id AND  next_outreach.encounter_type = 21 AND next_outreach.encounter_datetime > fa.encounter_datetime"
      }
    },
    {
      "table": "etl.flat_hiv_summary_v15b",
      "alias": "fhs",
      "join": {
        "type": "left",
        "joinCondition": "fhs.person_id = fa.person_id AND fhs.next_encounter_datetime_hiv IS NULL AND fhs.encounter_type NOT IN ('99999')"
      }
    },
    {
      "table": "etl.flat_appointment",
      "alias": "exited",
      "join": {
        "type": "left",
        "joinCondition": "exited.person_id = fa.person_id AND exited.encounter_type IN ('157') AND exited.next_clinical_encounter_datetime IS NULL"
      }
    },
    {
      "table": "etl.flat_appointment",
      "alias": "transfer",
      "join": {
        "type": "left",
        "joinCondition": "transfer.person_id = fa.person_id AND transfer.encounter_type IN ('116') AND transfer.next_clinical_encounter_datetime IS NULL"
      }
    }
  ],
  "columns": [
    {
      "type": "simple_column",
      "alias": "person_id",
      "column": "fa.person_id"
    },
    {
      "type": "simple_column",
      "alias": "gender",
      "column": "p.gender"
    },
    {
      "type": "simple_column",
      "alias": "program",
      "column": "pr.name"
    },
    {
      "type": "simple_column",
      "alias": "visit_type",
      "column": "vt.name"
    },
    {
      "type": "derived_column",
      "alias": "age",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "timestampdiff(year,p.birthdate,NOW())"
      }
    },
    {
      "type": "simple_column",
      "alias": "report_date",
      "column": "fa.rtc_date"
    },
    {
      "type": "simple_column",
      "alias": "location_id",
      "column": "fa.location_id"
    },
    {
      "type": "simple_column",
      "alias": "location_uuid",
      "column": "l.uuid"
    },
    {
      "type": "simple_column",
      "alias": "location_name",
      "column": "l.name"
    },
    {
      "type": "derived_column",
      "alias": "patients_scheduled",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(fa.person_id IS NOT NULL , 1 , NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "defaulted",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(attended_day.person_id IS NULL,1,NULL)"
      }
    },
    {
      "type": "derived_column",
      "alias": "no_attempt_to_contact_28_days_after_rtc",
      "expressionType": "simple_expression",
      "expressionOptions": {
        "expression": "IF(TIMESTAMPDIFF(DAY,fa.rtc_date, IF(fa.next_clinical_encounter_datetime IS NOT NULL, fa.next_clinical_encounter_datetime, CURDATE())) >= 28 AND fa.next_clinical_encounter_datetime IS NULL AND next_outreach.encounter_datetime IS NULL , 1, NULL)"
      }
    }
  ],
  "filters": {
    "conditionJoinOperator": "and",
    "conditions": [
      {
        "filterType": "tableColumns",
        "conditionExpression": "DATE(fa.rtc_date) >= ?",
        "parameterName": "startDate"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "DATE(fa.rtc_date) <= ?",
        "parameterName": "endDate"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "timestampdiff(year,p.birthdate,NOW()) >= ?",
        "parameterName": "startAge"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "timestampdiff(year,p.birthdate,NOW()) <= ?",
        "parameterName": "endAge"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "p.gender IN ?",
        "parameterName": "genders"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "fa.is_clinical = 1"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "fa.location_id IN ? ",
        "parameterName": "locations"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "fa.program_id IN (1,9,27) "
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "fhs.transfer_out_location_id NOT IN (?,9999) OR fhs.transfer_out_location_id IS NULL",
        "parameterName": "locations"
      },
      {
        "filterType": "tableColumns",
        "conditionExpression": "transfer.person_id IS NULL"
      }
    ]
  },
  "groupBy": {
    "groupParam": "groupByParam",
    "columns": ["fa.person_id", "DATE(fa.rtc_date)"]
  },
  "orderBy": {
    "orderByParam": "orderByParam",
    "columns": [
      {
        "column": "fa.rtc_date",
        "order": "asc"
      }
    ]
  }
}
