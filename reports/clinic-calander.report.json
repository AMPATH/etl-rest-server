[
  {
    "name": "attended",
    "table": {
      "schema": "",
      "tableName": "",
      "alias": "t1",
      "dynamicDataset": "attended-data-table"
    },
    "joins": [],
    "parameters": [
      {
        "name": "groupByd",
        "defaultValue": [{ "label": "d", "expression": "d" }]
      },
      {
        "name": "groupByw",
        "defaultValue": [{ "label": "w", "expression": "w" }]
      }
    ],
    "filters": [],
    "groupClause": [{ "parameter": "groupByd" }, { "parameter": "groupByw" }],
    "indicators": [
      {
        "label": "attended",
        "expression": "attended",
        "sql": "count(if(attended,1,0))"
      }
    ],
    "supplementColumns": [
      {
        "label": "d",
        "type": "single",
        "sql": "t1.d"
      },
      {
        "label": "w",
        "type": "single",
        "sql": "t1.w"
      }
    ]
  },
  {
    "name": "attended-data-table",
    "table": {
      "schema": "etl",
      "tableName": "flat_hiv_summary",
      "alias": "t1"
    },
    "joins": [
      {
        "joinType": "INNER JOIN",
        "schema": "etl",
        "tableName": "derived_encounter",
        "alias": "t2",
        "joinExpression": "t1.encounter_id = t2.encounter_id"
      }
    ],
    "parameters": [
      { "name": "startDate", "defaultValue": ["10-10-2015"] },
      { "name": "endDate", "defaultValue": ["defaultValue"] },
      { "name": "locationUuids", "defaultValue": [] },
      {
        "name": "groupByPerson",
        "defaultValue": [{ "label": "person_id", "expression": "t1.person_id" }]
      },
      {
        "name": "groupByEncounter",
        "defaultValue": [
          {
            "label": "encounter_date",
            "expression": "date(t1.encounter_datetime)"
          }
        ]
      }
    ],
    "filters": [
      { "expression": "t1.encounter_datetime >= ?", "parameter": "startDate" },
      { "expression": "t1.encounter_datetime <= ?", "parameter": "endDate" },
      { "expression": "t1.location_uuid = (?)", "parameter": "locationUuids" }
    ],
    "groupClause": [
      { "parameter": "groupByPerson" },
      { "parameter": "groupByEncounter" }
    ],
    "indicators": [],
    "supplementColumns": [
      {
        "label": "encounter_id",
        "type": "single",
        "sql": "t1.encounter_id"
      },
      {
        "label": "d",
        "type": "single",
        "sql": "date(encounter_datetime)"
      },
      {
        "label": "w",
        "type": "single",
        "sql": "date_format(encounter_datetime,'%W')"
      },
      {
        "label": "attended",
        "type": "single",
        "sql": "1"
      },
      {
        "label": "location_id",
        "type": "single",
        "sql": "t1.location_id"
      },
      {
        "label": "location_uuid",
        "type": "single",
        "sql": "t1.location_uuid"
      }
    ]
  },
  {
    "name": "appointments",
    "table": {
      "schema": "",
      "tableName": "",
      "alias": "t1",
      "dynamicDataset": "appointments-data-table"
    },
    "joins": [],
    "parameters": [
      {
        "name": "groupByd",
        "defaultValue": [{ "label": "d", "expression": "d" }]
      },
      {
        "name": "groupByw",
        "defaultValue": [{ "label": "w", "expression": "w" }]
      }
    ],
    "filters": [],
    "groupClause": [{ "parameter": "groupByd" }, { "parameter": "groupByw" }],
    "indicators": [
      {
        "label": "scheduled",
        "expression": "scheduled",
        "sql": "count(scheduled)"
      },
      {
        "label": "defaulted",
        "expression": "defaulted",
        "sql": "count(defaulted)"
      },
      {
        "label": "has_not_returned",
        "expression": "has_not_returned",
        "sql": "count(has_not_returned)"
      }
    ],
    "supplementColumns": [
      {
        "label": "d",
        "type": "single",
        "sql": "t1.d"
      },
      {
        "label": "w",
        "type": "single",
        "sql": "t1.w"
      }
    ]
  },
  {
    "name": "appointments-data-table",
    "table": {
      "schema": "etl",
      "tableName": "flat_hiv_summary",
      "alias": "t1"
    },
    "joins": [
      {
        "joinType": "INNER JOIN",
        "schema": "etl",
        "tableName": "derived_encounter",
        "alias": "t2",
        "joinExpression": "t1.encounter_id = t2.encounter_id"
      }
    ],
    "parameters": [
      { "name": "startDate", "defaultValue": ["10-10-2015"] },
      { "name": "endDate", "defaultValue": ["defaultValue"] },
      { "name": "locationUuids", "defaultValue": [] },
      {
        "name": "groupByPerson",
        "defaultValue": [{ "label": "person_id", "expression": "t1.person_id" }]
      },
      {
        "name": "groupByRtc",
        "defaultValue": [{ "label": "rtc_date", "expression": "t1.rtc_date" }]
      }
    ],
    "filters": [
      { "expression": "t1.rtc_date >= ?", "parameter": "startDate" },
      { "expression": "t1.rtc_date <= ?", "parameter": "endDate" },
      { "expression": "t1.location_uuid = ?", "parameter": "locationUuids" }
    ],
    "groupClause": [
      { "parameter": "groupByPerson" },
      { "parameter": "groupByRtc" }
    ],
    "indicators": [],
    "supplementColumns": [
      {
        "label": "encounter_id",
        "type": "single",
        "sql": "t1.encounter_id"
      },
      {
        "label": "d",
        "type": "single",
        "sql": "date(rtc_date)"
      },
      {
        "label": "w",
        "type": "single",
        "sql": "date_format(rtc_date,'%W')"
      },
      {
        "label": "scheduled",
        "type": "single",
        "sql": "1"
      },
      {
        "label": "location_id",
        "type": "single",
        "sql": "t1.location_id"
      },
      {
        "label": "location_uuid",
        "type": "single",
        "sql": "t1.location_uuid"
      },
      {
        "label": "patient_id",
        "type": "single",
        "sql": "t1.person_id"
      },
      {
        "label": "scheduled_and_attended",
        "type": "single",
        "sql": "if(timestampdiff(day,rtc_date,next_clinic_datetime) between -7 and 7,1,null)"
      },
      {
        "label": "defaulted",
        "type": "single",
        "sql": "if(death_date is null and transfer_out is null and timestampdiff(day,rtc_date,if(next_encounter_datetime,next_encounter_datetime,'')) > 90,1,null) "
      },
      {
        "label": "has_not_returned",
        "type": "single",
        "sql": "if(death_date is null and transfer_out is null and next_clinic_datetime is null,1,null)"
      },
      {
        "label": "followed_up_by_outreach",
        "type": "single",
        "sql": "if(next_encounter_type =21, 1,0)"
      }
    ]
  }
]
