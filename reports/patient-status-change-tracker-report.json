[
  {
    "name": "patient-status-change-tracker-report",
    "table": {
      "schema": "etl",
      "tableName": "dates",
      "alias": "t2"
    },
    "joins": [
      {
        "joinType": "JOIN",
        "schema": "etl",
        "tableName": "flat_hiv_summary",
        "alias": "t1",
        "indexExpression": "FORCE INDEX (loc_id_enc_date_next_clinic)",
        "joinExpression": "date(t1.encounter_datetime) <= date(t2.endDate)"
      }
    ],
    "parameters": [
      {
        "name": "startDate",
        "defaultValue": ["01-01-1980"]
      },
      {
        "name": "endDate",
        "defaultValue": ["Now()"]
      },
      {
        "name": "locationUuids",
        "defaultValue": [1]
      },
      {
        "name": "locations",
        "defaultValue": []
      },
      {
        "name": "groupByEndDate",
        "defaultValue": [
          {
            "label": "endDate",
            "expression": "endDate"
          }
        ]
      }
    ],
    "filters": [
      {
        "expression": "t2.endDate >= date(?)",
        "parameter": "startDate"
      },
      {
        "expression": "t2.endDate <= date(?)",
        "parameter": "endDate"
      },
      {
        "expression": "t1.location_id in ?",
        "parameter": "locations"
      },
      {
        "expression": "t1.is_clinical_encounter=1",
        "processForce": true
      },
      {
        "expression": "(t1.next_clinical_datetime_hiv is null or date(t1.next_clinical_datetime_hiv) > t2.endDate)",
        "processForce": true
      }
    ],
    "groupClause": [
      {
        "parameter": "groupByEndDate"
      }
    ],
    "indicators": [
      {
        "label": "total_patients",
        "expression": "total_patients",
        "sql": "count($expression)"
      },
      {
        "label": "active_in_care",
        "expression": "active_in_care",
        "sql": "count($expression)"
      },
      {
        "label": "active_return",
        "expression": "active_return",
        "sql": "count($expression)"
      },
      {
        "label": "LTFU",
        "expression": "LTFU",
        "sql": "count($expression)"
      },
      {
        "label": "deaths",
        "expression": "deaths",
        "sql": "count($expression)"
      },
      {
        "label": "transfer_out_patients",
        "expression": "transfer_out_patients",
        "sql": "count($expression)"
      },
      {
        "label": "HIV_negative_patients",
        "expression": "HIV_negative_patients",
        "sql": "count($expression)"
      },
      {
        "label": "self_disengaged_patients",
        "expression": "self_disengaged_patients",
        "sql": "count($expression)"
      },
      {
        "label": "new_enrollments",
        "expression": "new_enrollments",
        "sql": "count($expression)"
      },
      {
        "label": "transfer_in",
        "expression": "transfer_in",
        "sql": "count($expression)"
      }
    ],
    "supplementColumns": [
      {
        "label": "reporting_date",
        "type": "single",
        "sql": "t2.endDate"
      },
      {
        "label": "location_uuid",
        "type": "single",
        "sql": "t1.location_uuid"
      },
      {
        "label": "location_id",
        "type": "single",
        "sql": "t1.location_id"
      },
      {
        "label": "reporting_month",
        "type": "single",
        "sql": "date_format(t2.endDate, '%m/%Y')"
      }
    ],
    "patientListColumns": [
      "case when (timestampdiff(day,t1.vl_order_date,now()) between 0 and 14) and (t1.vl_1_date is null or t1.vl_order_date > t1.vl_1_date) then true else false end as has_pending_vl_test",
      "date_format(t1.enrollment_date,'%d-%m-%Y') as enrollment_date",
      "date_format(t1.hiv_start_date,'%d-%m-%Y') as hiv_start_date",
      "t1.arv_start_location",
      "date_format(t1.arv_first_regimen_start_date,'%d-%m-%Y') as arv_first_regimen_start_date",
      "date_format(t1.arv_start_date,'%d-%m-%Y') as cur_regimen_arv_start_date",
      "t1.cur_arv_line",
      "t1.cur_arv_meds",
      "t1.arv_first_regimen",
      "t1.vl_1",
      "date_format(t1.vl_1_date,'%d-%m-%Y') as vl_1_date",
      "date_format(t1.rtc_date,'%d-%m-%Y') as rtc_date",
      "date_format(t1.tb_prophylaxis_start_date,'%d-%m-%Y') as tb_prophylaxis_start_date",
      "date_format(t1.pcp_prophylaxis_start_date,'%d-%m-%Y') as pcp_prophylaxis_start_date",
      "date_format(t1.tb_tx_start_date,'%d-%m-%Y') as tb_tx_start_date",
      "t1.encounter_type",
      "date_format(t1.encounter_datetime,'%d-%m-%Y') as encounter_datetime",
      "date_format(t1.death_date,'%d-%m-%Y') as death_date",
      "t1.out_of_care",
      "t1.transfer_out",
      "t1.patient_care_status",
      "t1.prev_rtc_date",
      "t1.prev_encounter_datetime_hiv",
      "timestampdiff(day, if(t1.rtc_date, t1.rtc_date, DATE_ADD(t1.encounter_datetime, INTERVAL 30 DAY)), t2.endDate)  as days_since_last_RTC"
    ]
  }
]
